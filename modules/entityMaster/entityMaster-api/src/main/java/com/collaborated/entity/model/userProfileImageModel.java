/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.collaborated.entity.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.sql.Blob;

import java.util.Date;

/**
 * The base model interface for the userProfileImage service. Represents a row in the &quot;collaborated_userProfileImage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.collaborated.entity.model.impl.userProfileImageModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.collaborated.entity.model.impl.userProfileImageImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see userProfileImage
 * @see com.collaborated.entity.model.impl.userProfileImageImpl
 * @see com.collaborated.entity.model.impl.userProfileImageModelImpl
 * @generated
 */
@ProviderType
public interface userProfileImageModel extends BaseModel<userProfileImage> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a user profile image model instance should use the {@link userProfileImage} interface instead.
	 */

	/**
	 * Returns the primary key of this user profile image.
	 *
	 * @return the primary key of this user profile image
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this user profile image.
	 *
	 * @param primaryKey the primary key of this user profile image
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the p k_profile image ID of this user profile image.
	 *
	 * @return the p k_profile image ID of this user profile image
	 */
	public long getPK_profileImageId();

	/**
	 * Sets the p k_profile image ID of this user profile image.
	 *
	 * @param PK_profileImageId the p k_profile image ID of this user profile image
	 */
	public void setPK_profileImageId(long PK_profileImageId);

	/**
	 * Returns the group ID of this user profile image.
	 *
	 * @return the group ID of this user profile image
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this user profile image.
	 *
	 * @param groupId the group ID of this user profile image
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the created on of this user profile image.
	 *
	 * @return the created on of this user profile image
	 */
	public Date getCreatedOn();

	/**
	 * Sets the created on of this user profile image.
	 *
	 * @param createdOn the created on of this user profile image
	 */
	public void setCreatedOn(Date createdOn);

	/**
	 * Returns the user ID of this user profile image.
	 *
	 * @return the user ID of this user profile image
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this user profile image.
	 *
	 * @param userId the user ID of this user profile image
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this user profile image.
	 *
	 * @return the user uuid of this user profile image
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this user profile image.
	 *
	 * @param userUuid the user uuid of this user profile image
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the file entry ID of this user profile image.
	 *
	 * @return the file entry ID of this user profile image
	 */
	@AutoEscape
	public String getFileEntryId();

	/**
	 * Sets the file entry ID of this user profile image.
	 *
	 * @param fileEntryId the file entry ID of this user profile image
	 */
	public void setFileEntryId(String fileEntryId);

	/**
	 * Returns the file entry url of this user profile image.
	 *
	 * @return the file entry url of this user profile image
	 */
	@AutoEscape
	public String getFileEntryUrl();

	/**
	 * Sets the file entry url of this user profile image.
	 *
	 * @param fileEntryUrl the file entry url of this user profile image
	 */
	public void setFileEntryUrl(String fileEntryUrl);

	/**
	 * Returns the blob data of this user profile image.
	 *
	 * @return the blob data of this user profile image
	 */
	public Blob getBlobData();

	/**
	 * Sets the blob data of this user profile image.
	 *
	 * @param blobData the blob data of this user profile image
	 */
	public void setBlobData(Blob blobData);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.collaborated.entity.model.userProfileImage userProfileImage);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.collaborated.entity.model.userProfileImage> toCacheModel();

	@Override
	public com.collaborated.entity.model.userProfileImage toEscapedModel();

	@Override
	public com.collaborated.entity.model.userProfileImage toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}