/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.collaborated.entity.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the applicationLog service. Represents a row in the &quot;collaborated_applicationLog&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.collaborated.entity.model.impl.applicationLogModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.collaborated.entity.model.impl.applicationLogImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see applicationLog
 * @see com.collaborated.entity.model.impl.applicationLogImpl
 * @see com.collaborated.entity.model.impl.applicationLogModelImpl
 * @generated
 */
@ProviderType
public interface applicationLogModel extends BaseModel<applicationLog> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a application log model instance should use the {@link applicationLog} interface instead.
	 */

	/**
	 * Returns the primary key of this application log.
	 *
	 * @return the primary key of this application log
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this application log.
	 *
	 * @param primaryKey the primary key of this application log
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the p k_log ID of this application log.
	 *
	 * @return the p k_log ID of this application log
	 */
	public long getPK_logId();

	/**
	 * Sets the p k_log ID of this application log.
	 *
	 * @param PK_logId the p k_log ID of this application log
	 */
	public void setPK_logId(long PK_logId);

	/**
	 * Returns the user ID of this application log.
	 *
	 * @return the user ID of this application log
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this application log.
	 *
	 * @param userId the user ID of this application log
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this application log.
	 *
	 * @return the user uuid of this application log
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this application log.
	 *
	 * @param userUuid the user uuid of this application log
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this application log.
	 *
	 * @return the user name of this application log
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this application log.
	 *
	 * @param userName the user name of this application log
	 */
	public void setUserName(String userName);

	/**
	 * Returns the create date of this application log.
	 *
	 * @return the create date of this application log
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this application log.
	 *
	 * @param createDate the create date of this application log
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the page name of this application log.
	 *
	 * @return the page name of this application log
	 */
	@AutoEscape
	public String getPageName();

	/**
	 * Sets the page name of this application log.
	 *
	 * @param pageName the page name of this application log
	 */
	public void setPageName(String pageName);

	/**
	 * Returns the module name of this application log.
	 *
	 * @return the module name of this application log
	 */
	@AutoEscape
	public String getModuleName();

	/**
	 * Sets the module name of this application log.
	 *
	 * @param moduleName the module name of this application log
	 */
	public void setModuleName(String moduleName);

	/**
	 * Returns the button name of this application log.
	 *
	 * @return the button name of this application log
	 */
	@AutoEscape
	public String getButtonName();

	/**
	 * Sets the button name of this application log.
	 *
	 * @param buttonName the button name of this application log
	 */
	public void setButtonName(String buttonName);

	/**
	 * Returns the project ID of this application log.
	 *
	 * @return the project ID of this application log
	 */
	public long getProjectId();

	/**
	 * Sets the project ID of this application log.
	 *
	 * @param projectId the project ID of this application log
	 */
	public void setProjectId(long projectId);

	/**
	 * Returns the interest ID of this application log.
	 *
	 * @return the interest ID of this application log
	 */
	public long getInterestId();

	/**
	 * Sets the interest ID of this application log.
	 *
	 * @param interestId the interest ID of this application log
	 */
	public void setInterestId(long interestId);

	/**
	 * Returns the comments of this application log.
	 *
	 * @return the comments of this application log
	 */
	@AutoEscape
	public String getComments();

	/**
	 * Sets the comments of this application log.
	 *
	 * @param comments the comments of this application log
	 */
	public void setComments(String comments);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.collaborated.entity.model.applicationLog applicationLog);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.collaborated.entity.model.applicationLog> toCacheModel();

	@Override
	public com.collaborated.entity.model.applicationLog toEscapedModel();

	@Override
	public com.collaborated.entity.model.applicationLog toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}