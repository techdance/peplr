/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.collaborated.entity.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the projectDiscussion service. Represents a row in the &quot;collaborated_projectDiscussion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.collaborated.entity.model.impl.projectDiscussionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.collaborated.entity.model.impl.projectDiscussionImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see projectDiscussion
 * @see com.collaborated.entity.model.impl.projectDiscussionImpl
 * @see com.collaborated.entity.model.impl.projectDiscussionModelImpl
 * @generated
 */
@ProviderType
public interface projectDiscussionModel extends BaseModel<projectDiscussion> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a project discussion model instance should use the {@link projectDiscussion} interface instead.
	 */

	/**
	 * Returns the primary key of this project discussion.
	 *
	 * @return the primary key of this project discussion
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this project discussion.
	 *
	 * @param primaryKey the primary key of this project discussion
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the p k_project discussion ID of this project discussion.
	 *
	 * @return the p k_project discussion ID of this project discussion
	 */
	public long getPK_projectDiscussionId();

	/**
	 * Sets the p k_project discussion ID of this project discussion.
	 *
	 * @param PK_projectDiscussionId the p k_project discussion ID of this project discussion
	 */
	public void setPK_projectDiscussionId(long PK_projectDiscussionId);

	/**
	 * Returns the group ID of this project discussion.
	 *
	 * @return the group ID of this project discussion
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this project discussion.
	 *
	 * @param groupId the group ID of this project discussion
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the created on of this project discussion.
	 *
	 * @return the created on of this project discussion
	 */
	public Date getCreatedOn();

	/**
	 * Sets the created on of this project discussion.
	 *
	 * @param createdOn the created on of this project discussion
	 */
	public void setCreatedOn(Date createdOn);

	/**
	 * Returns the modified date of this project discussion.
	 *
	 * @return the modified date of this project discussion
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this project discussion.
	 *
	 * @param modifiedDate the modified date of this project discussion
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the interest ID of this project discussion.
	 *
	 * @return the interest ID of this project discussion
	 */
	public long getInterestId();

	/**
	 * Sets the interest ID of this project discussion.
	 *
	 * @param interestId the interest ID of this project discussion
	 */
	public void setInterestId(long interestId);

	/**
	 * Returns the project ID of this project discussion.
	 *
	 * @return the project ID of this project discussion
	 */
	public long getProjectId();

	/**
	 * Sets the project ID of this project discussion.
	 *
	 * @param projectId the project ID of this project discussion
	 */
	public void setProjectId(long projectId);

	/**
	 * Returns the sender ID of this project discussion.
	 *
	 * @return the sender ID of this project discussion
	 */
	public long getSenderId();

	/**
	 * Sets the sender ID of this project discussion.
	 *
	 * @param senderId the sender ID of this project discussion
	 */
	public void setSenderId(long senderId);

	/**
	 * Returns the description of this project discussion.
	 *
	 * @return the description of this project discussion
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this project discussion.
	 *
	 * @param description the description of this project discussion
	 */
	public void setDescription(String description);

	/**
	 * Returns the file entry ID of this project discussion.
	 *
	 * @return the file entry ID of this project discussion
	 */
	public long getFileEntryId();

	/**
	 * Sets the file entry ID of this project discussion.
	 *
	 * @param fileEntryId the file entry ID of this project discussion
	 */
	public void setFileEntryId(long fileEntryId);

	/**
	 * Returns the image url of this project discussion.
	 *
	 * @return the image url of this project discussion
	 */
	@AutoEscape
	public String getImageUrl();

	/**
	 * Sets the image url of this project discussion.
	 *
	 * @param imageUrl the image url of this project discussion
	 */
	public void setImageUrl(String imageUrl);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.collaborated.entity.model.projectDiscussion projectDiscussion);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.collaborated.entity.model.projectDiscussion> toCacheModel();

	@Override
	public com.collaborated.entity.model.projectDiscussion toEscapedModel();

	@Override
	public com.collaborated.entity.model.projectDiscussion toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}