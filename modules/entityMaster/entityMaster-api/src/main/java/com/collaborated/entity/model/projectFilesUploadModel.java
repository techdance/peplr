/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.collaborated.entity.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the projectFilesUpload service. Represents a row in the &quot;collaborated_projectFilesUpload&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.collaborated.entity.model.impl.projectFilesUploadModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.collaborated.entity.model.impl.projectFilesUploadImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see projectFilesUpload
 * @see com.collaborated.entity.model.impl.projectFilesUploadImpl
 * @see com.collaborated.entity.model.impl.projectFilesUploadModelImpl
 * @generated
 */
@ProviderType
public interface projectFilesUploadModel extends BaseModel<projectFilesUpload> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a project files upload model instance should use the {@link projectFilesUpload} interface instead.
	 */

	/**
	 * Returns the primary key of this project files upload.
	 *
	 * @return the primary key of this project files upload
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this project files upload.
	 *
	 * @param primaryKey the primary key of this project files upload
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the p k_project file ID of this project files upload.
	 *
	 * @return the p k_project file ID of this project files upload
	 */
	public long getPK_projectFileId();

	/**
	 * Sets the p k_project file ID of this project files upload.
	 *
	 * @param PK_projectFileId the p k_project file ID of this project files upload
	 */
	public void setPK_projectFileId(long PK_projectFileId);

	/**
	 * Returns the group ID of this project files upload.
	 *
	 * @return the group ID of this project files upload
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this project files upload.
	 *
	 * @param groupId the group ID of this project files upload
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the created on of this project files upload.
	 *
	 * @return the created on of this project files upload
	 */
	public Date getCreatedOn();

	/**
	 * Sets the created on of this project files upload.
	 *
	 * @param createdOn the created on of this project files upload
	 */
	public void setCreatedOn(Date createdOn);

	/**
	 * Returns the deleted on of this project files upload.
	 *
	 * @return the deleted on of this project files upload
	 */
	public Date getDeletedOn();

	/**
	 * Sets the deleted on of this project files upload.
	 *
	 * @param deletedOn the deleted on of this project files upload
	 */
	public void setDeletedOn(Date deletedOn);

	/**
	 * Returns the user ID of this project files upload.
	 *
	 * @return the user ID of this project files upload
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this project files upload.
	 *
	 * @param userId the user ID of this project files upload
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this project files upload.
	 *
	 * @return the user uuid of this project files upload
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this project files upload.
	 *
	 * @param userUuid the user uuid of this project files upload
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the deleted by of this project files upload.
	 *
	 * @return the deleted by of this project files upload
	 */
	public long getDeletedBy();

	/**
	 * Sets the deleted by of this project files upload.
	 *
	 * @param deletedBy the deleted by of this project files upload
	 */
	public void setDeletedBy(long deletedBy);

	/**
	 * Returns the p k_project folder ID of this project files upload.
	 *
	 * @return the p k_project folder ID of this project files upload
	 */
	public long getPK_projectFolderId();

	/**
	 * Sets the p k_project folder ID of this project files upload.
	 *
	 * @param PK_projectFolderId the p k_project folder ID of this project files upload
	 */
	public void setPK_projectFolderId(long PK_projectFolderId);

	/**
	 * Returns the file name of this project files upload.
	 *
	 * @return the file name of this project files upload
	 */
	@AutoEscape
	public String getFileName();

	/**
	 * Sets the file name of this project files upload.
	 *
	 * @param fileName the file name of this project files upload
	 */
	public void setFileName(String fileName);

	/**
	 * Returns the file entry ID of this project files upload.
	 *
	 * @return the file entry ID of this project files upload
	 */
	@AutoEscape
	public String getFileEntryId();

	/**
	 * Sets the file entry ID of this project files upload.
	 *
	 * @param fileEntryId the file entry ID of this project files upload
	 */
	public void setFileEntryId(String fileEntryId);

	/**
	 * Returns the description of this project files upload.
	 *
	 * @return the description of this project files upload
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this project files upload.
	 *
	 * @param description the description of this project files upload
	 */
	public void setDescription(String description);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.collaborated.entity.model.projectFilesUpload projectFilesUpload);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.collaborated.entity.model.projectFilesUpload> toCacheModel();

	@Override
	public com.collaborated.entity.model.projectFilesUpload toEscapedModel();

	@Override
	public com.collaborated.entity.model.projectFilesUpload toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}