/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.collaborated.entity.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.collaborated.entity.model.profileAreaofinterest;
import com.collaborated.entity.model.profileAreaofinterestModel;
import com.collaborated.entity.model.profileAreaofinterestSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the profileAreaofinterest service. Represents a row in the &quot;collaborated_profileAreaofinterest&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link profileAreaofinterestModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link profileAreaofinterestImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see profileAreaofinterestImpl
 * @see profileAreaofinterest
 * @see profileAreaofinterestModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class profileAreaofinterestModelImpl extends BaseModelImpl<profileAreaofinterest>
	implements profileAreaofinterestModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a profile areaofinterest model instance should use the {@link profileAreaofinterest} interface instead.
	 */
	public static final String TABLE_NAME = "collaborated_profileAreaofinterest";
	public static final Object[][] TABLE_COLUMNS = {
			{ "PK_areaofinterest", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "projectType", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "language", Types.VARCHAR },
			{ "campus", Types.VARCHAR },
			{ "programLevel", Types.VARCHAR },
			{ "programLength", Types.VARCHAR },
			{ "deliveryMethod", Types.VARCHAR },
			{ "credits", Types.VARCHAR },
			{ "collaborationType", Types.VARCHAR },
			{ "discipline1", Types.VARCHAR },
			{ "discipline2", Types.VARCHAR },
			{ "discipline3", Types.VARCHAR },
			{ "location1", Types.VARCHAR },
			{ "location2", Types.VARCHAR },
			{ "location3", Types.VARCHAR },
			{ "location4", Types.VARCHAR },
			{ "rangerYearStart", Types.INTEGER },
			{ "rangerYearEnd", Types.INTEGER },
			{ "rangerMonthStart", Types.VARCHAR },
			{ "rangerMonthEnd", Types.VARCHAR },
			{ "universityName", Types.VARCHAR },
			{ "groupName", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("PK_areaofinterest", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("projectType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("language", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("campus", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("programLevel", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("programLength", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("deliveryMethod", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("credits", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("collaborationType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("discipline1", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("discipline2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("discipline3", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("location1", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("location2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("location3", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("location4", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("rangerYearStart", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("rangerYearEnd", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("rangerMonthStart", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("rangerMonthEnd", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("universityName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("groupName", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table collaborated_profileAreaofinterest (PK_areaofinterest LONG not null primary key,groupId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,projectType VARCHAR(75) null,description VARCHAR(75) null,language VARCHAR(75) null,campus VARCHAR(75) null,programLevel VARCHAR(75) null,programLength VARCHAR(75) null,deliveryMethod VARCHAR(75) null,credits VARCHAR(75) null,collaborationType VARCHAR(75) null,discipline1 VARCHAR(75) null,discipline2 VARCHAR(75) null,discipline3 VARCHAR(75) null,location1 VARCHAR(75) null,location2 VARCHAR(75) null,location3 VARCHAR(75) null,location4 VARCHAR(75) null,rangerYearStart INTEGER,rangerYearEnd INTEGER,rangerMonthStart VARCHAR(75) null,rangerMonthEnd VARCHAR(75) null,universityName VARCHAR(75) null,groupName VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table collaborated_profileAreaofinterest";
	public static final String ORDER_BY_JPQL = " ORDER BY profileAreaofinterest.PK_areaofinterest ASC";
	public static final String ORDER_BY_SQL = " ORDER BY collaborated_profileAreaofinterest.PK_areaofinterest ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.collaborated.entity.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.collaborated.entity.model.profileAreaofinterest"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.collaborated.entity.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.collaborated.entity.model.profileAreaofinterest"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static profileAreaofinterest toModel(
		profileAreaofinterestSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		profileAreaofinterest model = new profileAreaofinterestImpl();

		model.setPK_areaofinterest(soapModel.getPK_areaofinterest());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setProjectType(soapModel.getProjectType());
		model.setDescription(soapModel.getDescription());
		model.setLanguage(soapModel.getLanguage());
		model.setCampus(soapModel.getCampus());
		model.setProgramLevel(soapModel.getProgramLevel());
		model.setProgramLength(soapModel.getProgramLength());
		model.setDeliveryMethod(soapModel.getDeliveryMethod());
		model.setCredits(soapModel.getCredits());
		model.setCollaborationType(soapModel.getCollaborationType());
		model.setDiscipline1(soapModel.getDiscipline1());
		model.setDiscipline2(soapModel.getDiscipline2());
		model.setDiscipline3(soapModel.getDiscipline3());
		model.setLocation1(soapModel.getLocation1());
		model.setLocation2(soapModel.getLocation2());
		model.setLocation3(soapModel.getLocation3());
		model.setLocation4(soapModel.getLocation4());
		model.setRangerYearStart(soapModel.getRangerYearStart());
		model.setRangerYearEnd(soapModel.getRangerYearEnd());
		model.setRangerMonthStart(soapModel.getRangerMonthStart());
		model.setRangerMonthEnd(soapModel.getRangerMonthEnd());
		model.setUniversityName(soapModel.getUniversityName());
		model.setGroupName(soapModel.getGroupName());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<profileAreaofinterest> toModels(
		profileAreaofinterestSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<profileAreaofinterest> models = new ArrayList<profileAreaofinterest>(soapModels.length);

		for (profileAreaofinterestSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.collaborated.entity.service.util.ServiceProps.get(
				"lock.expiration.time.com.collaborated.entity.model.profileAreaofinterest"));

	public profileAreaofinterestModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _PK_areaofinterest;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPK_areaofinterest(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _PK_areaofinterest;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return profileAreaofinterest.class;
	}

	@Override
	public String getModelClassName() {
		return profileAreaofinterest.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("PK_areaofinterest", getPK_areaofinterest());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("projectType", getProjectType());
		attributes.put("description", getDescription());
		attributes.put("language", getLanguage());
		attributes.put("campus", getCampus());
		attributes.put("programLevel", getProgramLevel());
		attributes.put("programLength", getProgramLength());
		attributes.put("deliveryMethod", getDeliveryMethod());
		attributes.put("credits", getCredits());
		attributes.put("collaborationType", getCollaborationType());
		attributes.put("discipline1", getDiscipline1());
		attributes.put("discipline2", getDiscipline2());
		attributes.put("discipline3", getDiscipline3());
		attributes.put("location1", getLocation1());
		attributes.put("location2", getLocation2());
		attributes.put("location3", getLocation3());
		attributes.put("location4", getLocation4());
		attributes.put("rangerYearStart", getRangerYearStart());
		attributes.put("rangerYearEnd", getRangerYearEnd());
		attributes.put("rangerMonthStart", getRangerMonthStart());
		attributes.put("rangerMonthEnd", getRangerMonthEnd());
		attributes.put("universityName", getUniversityName());
		attributes.put("groupName", getGroupName());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long PK_areaofinterest = (Long)attributes.get("PK_areaofinterest");

		if (PK_areaofinterest != null) {
			setPK_areaofinterest(PK_areaofinterest);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String projectType = (String)attributes.get("projectType");

		if (projectType != null) {
			setProjectType(projectType);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String language = (String)attributes.get("language");

		if (language != null) {
			setLanguage(language);
		}

		String campus = (String)attributes.get("campus");

		if (campus != null) {
			setCampus(campus);
		}

		String programLevel = (String)attributes.get("programLevel");

		if (programLevel != null) {
			setProgramLevel(programLevel);
		}

		String programLength = (String)attributes.get("programLength");

		if (programLength != null) {
			setProgramLength(programLength);
		}

		String deliveryMethod = (String)attributes.get("deliveryMethod");

		if (deliveryMethod != null) {
			setDeliveryMethod(deliveryMethod);
		}

		String credits = (String)attributes.get("credits");

		if (credits != null) {
			setCredits(credits);
		}

		String collaborationType = (String)attributes.get("collaborationType");

		if (collaborationType != null) {
			setCollaborationType(collaborationType);
		}

		String discipline1 = (String)attributes.get("discipline1");

		if (discipline1 != null) {
			setDiscipline1(discipline1);
		}

		String discipline2 = (String)attributes.get("discipline2");

		if (discipline2 != null) {
			setDiscipline2(discipline2);
		}

		String discipline3 = (String)attributes.get("discipline3");

		if (discipline3 != null) {
			setDiscipline3(discipline3);
		}

		String location1 = (String)attributes.get("location1");

		if (location1 != null) {
			setLocation1(location1);
		}

		String location2 = (String)attributes.get("location2");

		if (location2 != null) {
			setLocation2(location2);
		}

		String location3 = (String)attributes.get("location3");

		if (location3 != null) {
			setLocation3(location3);
		}

		String location4 = (String)attributes.get("location4");

		if (location4 != null) {
			setLocation4(location4);
		}

		Integer rangerYearStart = (Integer)attributes.get("rangerYearStart");

		if (rangerYearStart != null) {
			setRangerYearStart(rangerYearStart);
		}

		Integer rangerYearEnd = (Integer)attributes.get("rangerYearEnd");

		if (rangerYearEnd != null) {
			setRangerYearEnd(rangerYearEnd);
		}

		String rangerMonthStart = (String)attributes.get("rangerMonthStart");

		if (rangerMonthStart != null) {
			setRangerMonthStart(rangerMonthStart);
		}

		String rangerMonthEnd = (String)attributes.get("rangerMonthEnd");

		if (rangerMonthEnd != null) {
			setRangerMonthEnd(rangerMonthEnd);
		}

		String universityName = (String)attributes.get("universityName");

		if (universityName != null) {
			setUniversityName(universityName);
		}

		String groupName = (String)attributes.get("groupName");

		if (groupName != null) {
			setGroupName(groupName);
		}
	}

	@JSON
	@Override
	public long getPK_areaofinterest() {
		return _PK_areaofinterest;
	}

	@Override
	public void setPK_areaofinterest(long PK_areaofinterest) {
		_PK_areaofinterest = PK_areaofinterest;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getProjectType() {
		if (_projectType == null) {
			return StringPool.BLANK;
		}
		else {
			return _projectType;
		}
	}

	@Override
	public void setProjectType(String projectType) {
		_projectType = projectType;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public String getLanguage() {
		if (_language == null) {
			return StringPool.BLANK;
		}
		else {
			return _language;
		}
	}

	@Override
	public void setLanguage(String language) {
		_language = language;
	}

	@JSON
	@Override
	public String getCampus() {
		if (_campus == null) {
			return StringPool.BLANK;
		}
		else {
			return _campus;
		}
	}

	@Override
	public void setCampus(String campus) {
		_campus = campus;
	}

	@JSON
	@Override
	public String getProgramLevel() {
		if (_programLevel == null) {
			return StringPool.BLANK;
		}
		else {
			return _programLevel;
		}
	}

	@Override
	public void setProgramLevel(String programLevel) {
		_programLevel = programLevel;
	}

	@JSON
	@Override
	public String getProgramLength() {
		if (_programLength == null) {
			return StringPool.BLANK;
		}
		else {
			return _programLength;
		}
	}

	@Override
	public void setProgramLength(String programLength) {
		_programLength = programLength;
	}

	@JSON
	@Override
	public String getDeliveryMethod() {
		if (_deliveryMethod == null) {
			return StringPool.BLANK;
		}
		else {
			return _deliveryMethod;
		}
	}

	@Override
	public void setDeliveryMethod(String deliveryMethod) {
		_deliveryMethod = deliveryMethod;
	}

	@JSON
	@Override
	public String getCredits() {
		if (_credits == null) {
			return StringPool.BLANK;
		}
		else {
			return _credits;
		}
	}

	@Override
	public void setCredits(String credits) {
		_credits = credits;
	}

	@JSON
	@Override
	public String getCollaborationType() {
		if (_collaborationType == null) {
			return StringPool.BLANK;
		}
		else {
			return _collaborationType;
		}
	}

	@Override
	public void setCollaborationType(String collaborationType) {
		_collaborationType = collaborationType;
	}

	@JSON
	@Override
	public String getDiscipline1() {
		if (_discipline1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _discipline1;
		}
	}

	@Override
	public void setDiscipline1(String discipline1) {
		_discipline1 = discipline1;
	}

	@JSON
	@Override
	public String getDiscipline2() {
		if (_discipline2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _discipline2;
		}
	}

	@Override
	public void setDiscipline2(String discipline2) {
		_discipline2 = discipline2;
	}

	@JSON
	@Override
	public String getDiscipline3() {
		if (_discipline3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _discipline3;
		}
	}

	@Override
	public void setDiscipline3(String discipline3) {
		_discipline3 = discipline3;
	}

	@JSON
	@Override
	public String getLocation1() {
		if (_location1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _location1;
		}
	}

	@Override
	public void setLocation1(String location1) {
		_location1 = location1;
	}

	@JSON
	@Override
	public String getLocation2() {
		if (_location2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _location2;
		}
	}

	@Override
	public void setLocation2(String location2) {
		_location2 = location2;
	}

	@JSON
	@Override
	public String getLocation3() {
		if (_location3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _location3;
		}
	}

	@Override
	public void setLocation3(String location3) {
		_location3 = location3;
	}

	@JSON
	@Override
	public String getLocation4() {
		if (_location4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _location4;
		}
	}

	@Override
	public void setLocation4(String location4) {
		_location4 = location4;
	}

	@JSON
	@Override
	public int getRangerYearStart() {
		return _rangerYearStart;
	}

	@Override
	public void setRangerYearStart(int rangerYearStart) {
		_rangerYearStart = rangerYearStart;
	}

	@JSON
	@Override
	public int getRangerYearEnd() {
		return _rangerYearEnd;
	}

	@Override
	public void setRangerYearEnd(int rangerYearEnd) {
		_rangerYearEnd = rangerYearEnd;
	}

	@JSON
	@Override
	public String getRangerMonthStart() {
		if (_rangerMonthStart == null) {
			return StringPool.BLANK;
		}
		else {
			return _rangerMonthStart;
		}
	}

	@Override
	public void setRangerMonthStart(String rangerMonthStart) {
		_rangerMonthStart = rangerMonthStart;
	}

	@JSON
	@Override
	public String getRangerMonthEnd() {
		if (_rangerMonthEnd == null) {
			return StringPool.BLANK;
		}
		else {
			return _rangerMonthEnd;
		}
	}

	@Override
	public void setRangerMonthEnd(String rangerMonthEnd) {
		_rangerMonthEnd = rangerMonthEnd;
	}

	@JSON
	@Override
	public String getUniversityName() {
		if (_universityName == null) {
			return StringPool.BLANK;
		}
		else {
			return _universityName;
		}
	}

	@Override
	public void setUniversityName(String universityName) {
		_universityName = universityName;
	}

	@JSON
	@Override
	public String getGroupName() {
		if (_groupName == null) {
			return StringPool.BLANK;
		}
		else {
			return _groupName;
		}
	}

	@Override
	public void setGroupName(String groupName) {
		_groupName = groupName;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			profileAreaofinterest.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public profileAreaofinterest toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (profileAreaofinterest)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		profileAreaofinterestImpl profileAreaofinterestImpl = new profileAreaofinterestImpl();

		profileAreaofinterestImpl.setPK_areaofinterest(getPK_areaofinterest());
		profileAreaofinterestImpl.setGroupId(getGroupId());
		profileAreaofinterestImpl.setUserId(getUserId());
		profileAreaofinterestImpl.setCreateDate(getCreateDate());
		profileAreaofinterestImpl.setModifiedDate(getModifiedDate());
		profileAreaofinterestImpl.setProjectType(getProjectType());
		profileAreaofinterestImpl.setDescription(getDescription());
		profileAreaofinterestImpl.setLanguage(getLanguage());
		profileAreaofinterestImpl.setCampus(getCampus());
		profileAreaofinterestImpl.setProgramLevel(getProgramLevel());
		profileAreaofinterestImpl.setProgramLength(getProgramLength());
		profileAreaofinterestImpl.setDeliveryMethod(getDeliveryMethod());
		profileAreaofinterestImpl.setCredits(getCredits());
		profileAreaofinterestImpl.setCollaborationType(getCollaborationType());
		profileAreaofinterestImpl.setDiscipline1(getDiscipline1());
		profileAreaofinterestImpl.setDiscipline2(getDiscipline2());
		profileAreaofinterestImpl.setDiscipline3(getDiscipline3());
		profileAreaofinterestImpl.setLocation1(getLocation1());
		profileAreaofinterestImpl.setLocation2(getLocation2());
		profileAreaofinterestImpl.setLocation3(getLocation3());
		profileAreaofinterestImpl.setLocation4(getLocation4());
		profileAreaofinterestImpl.setRangerYearStart(getRangerYearStart());
		profileAreaofinterestImpl.setRangerYearEnd(getRangerYearEnd());
		profileAreaofinterestImpl.setRangerMonthStart(getRangerMonthStart());
		profileAreaofinterestImpl.setRangerMonthEnd(getRangerMonthEnd());
		profileAreaofinterestImpl.setUniversityName(getUniversityName());
		profileAreaofinterestImpl.setGroupName(getGroupName());

		profileAreaofinterestImpl.resetOriginalValues();

		return profileAreaofinterestImpl;
	}

	@Override
	public int compareTo(profileAreaofinterest profileAreaofinterest) {
		long primaryKey = profileAreaofinterest.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof profileAreaofinterest)) {
			return false;
		}

		profileAreaofinterest profileAreaofinterest = (profileAreaofinterest)obj;

		long primaryKey = profileAreaofinterest.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		profileAreaofinterestModelImpl profileAreaofinterestModelImpl = this;

		profileAreaofinterestModelImpl._setModifiedDate = false;
	}

	@Override
	public CacheModel<profileAreaofinterest> toCacheModel() {
		profileAreaofinterestCacheModel profileAreaofinterestCacheModel = new profileAreaofinterestCacheModel();

		profileAreaofinterestCacheModel.PK_areaofinterest = getPK_areaofinterest();

		profileAreaofinterestCacheModel.groupId = getGroupId();

		profileAreaofinterestCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			profileAreaofinterestCacheModel.createDate = createDate.getTime();
		}
		else {
			profileAreaofinterestCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			profileAreaofinterestCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			profileAreaofinterestCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		profileAreaofinterestCacheModel.projectType = getProjectType();

		String projectType = profileAreaofinterestCacheModel.projectType;

		if ((projectType != null) && (projectType.length() == 0)) {
			profileAreaofinterestCacheModel.projectType = null;
		}

		profileAreaofinterestCacheModel.description = getDescription();

		String description = profileAreaofinterestCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			profileAreaofinterestCacheModel.description = null;
		}

		profileAreaofinterestCacheModel.language = getLanguage();

		String language = profileAreaofinterestCacheModel.language;

		if ((language != null) && (language.length() == 0)) {
			profileAreaofinterestCacheModel.language = null;
		}

		profileAreaofinterestCacheModel.campus = getCampus();

		String campus = profileAreaofinterestCacheModel.campus;

		if ((campus != null) && (campus.length() == 0)) {
			profileAreaofinterestCacheModel.campus = null;
		}

		profileAreaofinterestCacheModel.programLevel = getProgramLevel();

		String programLevel = profileAreaofinterestCacheModel.programLevel;

		if ((programLevel != null) && (programLevel.length() == 0)) {
			profileAreaofinterestCacheModel.programLevel = null;
		}

		profileAreaofinterestCacheModel.programLength = getProgramLength();

		String programLength = profileAreaofinterestCacheModel.programLength;

		if ((programLength != null) && (programLength.length() == 0)) {
			profileAreaofinterestCacheModel.programLength = null;
		}

		profileAreaofinterestCacheModel.deliveryMethod = getDeliveryMethod();

		String deliveryMethod = profileAreaofinterestCacheModel.deliveryMethod;

		if ((deliveryMethod != null) && (deliveryMethod.length() == 0)) {
			profileAreaofinterestCacheModel.deliveryMethod = null;
		}

		profileAreaofinterestCacheModel.credits = getCredits();

		String credits = profileAreaofinterestCacheModel.credits;

		if ((credits != null) && (credits.length() == 0)) {
			profileAreaofinterestCacheModel.credits = null;
		}

		profileAreaofinterestCacheModel.collaborationType = getCollaborationType();

		String collaborationType = profileAreaofinterestCacheModel.collaborationType;

		if ((collaborationType != null) && (collaborationType.length() == 0)) {
			profileAreaofinterestCacheModel.collaborationType = null;
		}

		profileAreaofinterestCacheModel.discipline1 = getDiscipline1();

		String discipline1 = profileAreaofinterestCacheModel.discipline1;

		if ((discipline1 != null) && (discipline1.length() == 0)) {
			profileAreaofinterestCacheModel.discipline1 = null;
		}

		profileAreaofinterestCacheModel.discipline2 = getDiscipline2();

		String discipline2 = profileAreaofinterestCacheModel.discipline2;

		if ((discipline2 != null) && (discipline2.length() == 0)) {
			profileAreaofinterestCacheModel.discipline2 = null;
		}

		profileAreaofinterestCacheModel.discipline3 = getDiscipline3();

		String discipline3 = profileAreaofinterestCacheModel.discipline3;

		if ((discipline3 != null) && (discipline3.length() == 0)) {
			profileAreaofinterestCacheModel.discipline3 = null;
		}

		profileAreaofinterestCacheModel.location1 = getLocation1();

		String location1 = profileAreaofinterestCacheModel.location1;

		if ((location1 != null) && (location1.length() == 0)) {
			profileAreaofinterestCacheModel.location1 = null;
		}

		profileAreaofinterestCacheModel.location2 = getLocation2();

		String location2 = profileAreaofinterestCacheModel.location2;

		if ((location2 != null) && (location2.length() == 0)) {
			profileAreaofinterestCacheModel.location2 = null;
		}

		profileAreaofinterestCacheModel.location3 = getLocation3();

		String location3 = profileAreaofinterestCacheModel.location3;

		if ((location3 != null) && (location3.length() == 0)) {
			profileAreaofinterestCacheModel.location3 = null;
		}

		profileAreaofinterestCacheModel.location4 = getLocation4();

		String location4 = profileAreaofinterestCacheModel.location4;

		if ((location4 != null) && (location4.length() == 0)) {
			profileAreaofinterestCacheModel.location4 = null;
		}

		profileAreaofinterestCacheModel.rangerYearStart = getRangerYearStart();

		profileAreaofinterestCacheModel.rangerYearEnd = getRangerYearEnd();

		profileAreaofinterestCacheModel.rangerMonthStart = getRangerMonthStart();

		String rangerMonthStart = profileAreaofinterestCacheModel.rangerMonthStart;

		if ((rangerMonthStart != null) && (rangerMonthStart.length() == 0)) {
			profileAreaofinterestCacheModel.rangerMonthStart = null;
		}

		profileAreaofinterestCacheModel.rangerMonthEnd = getRangerMonthEnd();

		String rangerMonthEnd = profileAreaofinterestCacheModel.rangerMonthEnd;

		if ((rangerMonthEnd != null) && (rangerMonthEnd.length() == 0)) {
			profileAreaofinterestCacheModel.rangerMonthEnd = null;
		}

		profileAreaofinterestCacheModel.universityName = getUniversityName();

		String universityName = profileAreaofinterestCacheModel.universityName;

		if ((universityName != null) && (universityName.length() == 0)) {
			profileAreaofinterestCacheModel.universityName = null;
		}

		profileAreaofinterestCacheModel.groupName = getGroupName();

		String groupName = profileAreaofinterestCacheModel.groupName;

		if ((groupName != null) && (groupName.length() == 0)) {
			profileAreaofinterestCacheModel.groupName = null;
		}

		return profileAreaofinterestCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(55);

		sb.append("{PK_areaofinterest=");
		sb.append(getPK_areaofinterest());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", projectType=");
		sb.append(getProjectType());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", language=");
		sb.append(getLanguage());
		sb.append(", campus=");
		sb.append(getCampus());
		sb.append(", programLevel=");
		sb.append(getProgramLevel());
		sb.append(", programLength=");
		sb.append(getProgramLength());
		sb.append(", deliveryMethod=");
		sb.append(getDeliveryMethod());
		sb.append(", credits=");
		sb.append(getCredits());
		sb.append(", collaborationType=");
		sb.append(getCollaborationType());
		sb.append(", discipline1=");
		sb.append(getDiscipline1());
		sb.append(", discipline2=");
		sb.append(getDiscipline2());
		sb.append(", discipline3=");
		sb.append(getDiscipline3());
		sb.append(", location1=");
		sb.append(getLocation1());
		sb.append(", location2=");
		sb.append(getLocation2());
		sb.append(", location3=");
		sb.append(getLocation3());
		sb.append(", location4=");
		sb.append(getLocation4());
		sb.append(", rangerYearStart=");
		sb.append(getRangerYearStart());
		sb.append(", rangerYearEnd=");
		sb.append(getRangerYearEnd());
		sb.append(", rangerMonthStart=");
		sb.append(getRangerMonthStart());
		sb.append(", rangerMonthEnd=");
		sb.append(getRangerMonthEnd());
		sb.append(", universityName=");
		sb.append(getUniversityName());
		sb.append(", groupName=");
		sb.append(getGroupName());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(85);

		sb.append("<model><model-name>");
		sb.append("com.collaborated.entity.model.profileAreaofinterest");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>PK_areaofinterest</column-name><column-value><![CDATA[");
		sb.append(getPK_areaofinterest());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projectType</column-name><column-value><![CDATA[");
		sb.append(getProjectType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>language</column-name><column-value><![CDATA[");
		sb.append(getLanguage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>campus</column-name><column-value><![CDATA[");
		sb.append(getCampus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>programLevel</column-name><column-value><![CDATA[");
		sb.append(getProgramLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>programLength</column-name><column-value><![CDATA[");
		sb.append(getProgramLength());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deliveryMethod</column-name><column-value><![CDATA[");
		sb.append(getDeliveryMethod());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>credits</column-name><column-value><![CDATA[");
		sb.append(getCredits());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>collaborationType</column-name><column-value><![CDATA[");
		sb.append(getCollaborationType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>discipline1</column-name><column-value><![CDATA[");
		sb.append(getDiscipline1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>discipline2</column-name><column-value><![CDATA[");
		sb.append(getDiscipline2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>discipline3</column-name><column-value><![CDATA[");
		sb.append(getDiscipline3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>location1</column-name><column-value><![CDATA[");
		sb.append(getLocation1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>location2</column-name><column-value><![CDATA[");
		sb.append(getLocation2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>location3</column-name><column-value><![CDATA[");
		sb.append(getLocation3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>location4</column-name><column-value><![CDATA[");
		sb.append(getLocation4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rangerYearStart</column-name><column-value><![CDATA[");
		sb.append(getRangerYearStart());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rangerYearEnd</column-name><column-value><![CDATA[");
		sb.append(getRangerYearEnd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rangerMonthStart</column-name><column-value><![CDATA[");
		sb.append(getRangerMonthStart());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rangerMonthEnd</column-name><column-value><![CDATA[");
		sb.append(getRangerMonthEnd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>universityName</column-name><column-value><![CDATA[");
		sb.append(getUniversityName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupName</column-name><column-value><![CDATA[");
		sb.append(getGroupName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = profileAreaofinterest.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			profileAreaofinterest.class
		};
	private long _PK_areaofinterest;
	private long _groupId;
	private long _userId;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _projectType;
	private String _description;
	private String _language;
	private String _campus;
	private String _programLevel;
	private String _programLength;
	private String _deliveryMethod;
	private String _credits;
	private String _collaborationType;
	private String _discipline1;
	private String _discipline2;
	private String _discipline3;
	private String _location1;
	private String _location2;
	private String _location3;
	private String _location4;
	private int _rangerYearStart;
	private int _rangerYearEnd;
	private String _rangerMonthStart;
	private String _rangerMonthEnd;
	private String _universityName;
	private String _groupName;
	private profileAreaofinterest _escapedModel;
}