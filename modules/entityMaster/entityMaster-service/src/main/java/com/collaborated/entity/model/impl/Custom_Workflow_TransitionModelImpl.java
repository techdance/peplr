/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.collaborated.entity.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.collaborated.entity.model.Custom_Workflow_Transition;
import com.collaborated.entity.model.Custom_Workflow_TransitionModel;
import com.collaborated.entity.model.Custom_Workflow_TransitionSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Custom_Workflow_Transition service. Represents a row in the &quot;collaborated_Custom_Workflow_Transition&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link Custom_Workflow_TransitionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Custom_Workflow_TransitionImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Custom_Workflow_TransitionImpl
 * @see Custom_Workflow_Transition
 * @see Custom_Workflow_TransitionModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class Custom_Workflow_TransitionModelImpl extends BaseModelImpl<Custom_Workflow_Transition>
	implements Custom_Workflow_TransitionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a custom_ workflow_ transition model instance should use the {@link Custom_Workflow_Transition} interface instead.
	 */
	public static final String TABLE_NAME = "collaborated_Custom_Workflow_Transition";
	public static final Object[][] TABLE_COLUMNS = {
			{ "transitionId", Types.BIGINT },
			{ "workFlowId", Types.BIGINT },
			{ "workFlowTaskId", Types.VARCHAR },
			{ "transitionName", Types.VARCHAR },
			{ "logDescription", Types.VARCHAR },
			{ "next_WorkFlowTaskId", Types.VARCHAR },
			{ "isEnd", Types.BIGINT },
			{ "comments", Types.VARCHAR },
			{ "createdDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("transitionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("workFlowId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("workFlowTaskId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("transitionName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("logDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("next_WorkFlowTaskId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("isEnd", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("comments", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table collaborated_Custom_Workflow_Transition (transitionId LONG not null primary key,workFlowId LONG,workFlowTaskId VARCHAR(75) null,transitionName VARCHAR(75) null,logDescription VARCHAR(75) null,next_WorkFlowTaskId VARCHAR(75) null,isEnd LONG,comments VARCHAR(75) null,createdDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table collaborated_Custom_Workflow_Transition";
	public static final String ORDER_BY_JPQL = " ORDER BY custom_Workflow_Transition.transitionId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY collaborated_Custom_Workflow_Transition.transitionId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.collaborated.entity.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.collaborated.entity.model.Custom_Workflow_Transition"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.collaborated.entity.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.collaborated.entity.model.Custom_Workflow_Transition"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Custom_Workflow_Transition toModel(
		Custom_Workflow_TransitionSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Custom_Workflow_Transition model = new Custom_Workflow_TransitionImpl();

		model.setTransitionId(soapModel.getTransitionId());
		model.setWorkFlowId(soapModel.getWorkFlowId());
		model.setWorkFlowTaskId(soapModel.getWorkFlowTaskId());
		model.setTransitionName(soapModel.getTransitionName());
		model.setLogDescription(soapModel.getLogDescription());
		model.setNext_WorkFlowTaskId(soapModel.getNext_WorkFlowTaskId());
		model.setIsEnd(soapModel.getIsEnd());
		model.setComments(soapModel.getComments());
		model.setCreatedDate(soapModel.getCreatedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Custom_Workflow_Transition> toModels(
		Custom_Workflow_TransitionSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Custom_Workflow_Transition> models = new ArrayList<Custom_Workflow_Transition>(soapModels.length);

		for (Custom_Workflow_TransitionSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.collaborated.entity.service.util.ServiceProps.get(
				"lock.expiration.time.com.collaborated.entity.model.Custom_Workflow_Transition"));

	public Custom_Workflow_TransitionModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _transitionId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTransitionId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _transitionId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Custom_Workflow_Transition.class;
	}

	@Override
	public String getModelClassName() {
		return Custom_Workflow_Transition.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("transitionId", getTransitionId());
		attributes.put("workFlowId", getWorkFlowId());
		attributes.put("workFlowTaskId", getWorkFlowTaskId());
		attributes.put("transitionName", getTransitionName());
		attributes.put("logDescription", getLogDescription());
		attributes.put("next_WorkFlowTaskId", getNext_WorkFlowTaskId());
		attributes.put("isEnd", getIsEnd());
		attributes.put("comments", getComments());
		attributes.put("createdDate", getCreatedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long transitionId = (Long)attributes.get("transitionId");

		if (transitionId != null) {
			setTransitionId(transitionId);
		}

		Long workFlowId = (Long)attributes.get("workFlowId");

		if (workFlowId != null) {
			setWorkFlowId(workFlowId);
		}

		String workFlowTaskId = (String)attributes.get("workFlowTaskId");

		if (workFlowTaskId != null) {
			setWorkFlowTaskId(workFlowTaskId);
		}

		String transitionName = (String)attributes.get("transitionName");

		if (transitionName != null) {
			setTransitionName(transitionName);
		}

		String logDescription = (String)attributes.get("logDescription");

		if (logDescription != null) {
			setLogDescription(logDescription);
		}

		String next_WorkFlowTaskId = (String)attributes.get(
				"next_WorkFlowTaskId");

		if (next_WorkFlowTaskId != null) {
			setNext_WorkFlowTaskId(next_WorkFlowTaskId);
		}

		Long isEnd = (Long)attributes.get("isEnd");

		if (isEnd != null) {
			setIsEnd(isEnd);
		}

		String comments = (String)attributes.get("comments");

		if (comments != null) {
			setComments(comments);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}
	}

	@JSON
	@Override
	public long getTransitionId() {
		return _transitionId;
	}

	@Override
	public void setTransitionId(long transitionId) {
		_transitionId = transitionId;
	}

	@JSON
	@Override
	public long getWorkFlowId() {
		return _workFlowId;
	}

	@Override
	public void setWorkFlowId(long workFlowId) {
		_workFlowId = workFlowId;
	}

	@JSON
	@Override
	public String getWorkFlowTaskId() {
		if (_workFlowTaskId == null) {
			return StringPool.BLANK;
		}
		else {
			return _workFlowTaskId;
		}
	}

	@Override
	public void setWorkFlowTaskId(String workFlowTaskId) {
		_workFlowTaskId = workFlowTaskId;
	}

	@JSON
	@Override
	public String getTransitionName() {
		if (_transitionName == null) {
			return StringPool.BLANK;
		}
		else {
			return _transitionName;
		}
	}

	@Override
	public void setTransitionName(String transitionName) {
		_transitionName = transitionName;
	}

	@JSON
	@Override
	public String getLogDescription() {
		if (_logDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _logDescription;
		}
	}

	@Override
	public void setLogDescription(String logDescription) {
		_logDescription = logDescription;
	}

	@JSON
	@Override
	public String getNext_WorkFlowTaskId() {
		if (_next_WorkFlowTaskId == null) {
			return StringPool.BLANK;
		}
		else {
			return _next_WorkFlowTaskId;
		}
	}

	@Override
	public void setNext_WorkFlowTaskId(String next_WorkFlowTaskId) {
		_next_WorkFlowTaskId = next_WorkFlowTaskId;
	}

	@JSON
	@Override
	public long getIsEnd() {
		return _isEnd;
	}

	@Override
	public void setIsEnd(long isEnd) {
		_isEnd = isEnd;
	}

	@JSON
	@Override
	public String getComments() {
		if (_comments == null) {
			return StringPool.BLANK;
		}
		else {
			return _comments;
		}
	}

	@Override
	public void setComments(String comments) {
		_comments = comments;
	}

	@JSON
	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Custom_Workflow_Transition.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Custom_Workflow_Transition toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Custom_Workflow_Transition)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		Custom_Workflow_TransitionImpl custom_Workflow_TransitionImpl = new Custom_Workflow_TransitionImpl();

		custom_Workflow_TransitionImpl.setTransitionId(getTransitionId());
		custom_Workflow_TransitionImpl.setWorkFlowId(getWorkFlowId());
		custom_Workflow_TransitionImpl.setWorkFlowTaskId(getWorkFlowTaskId());
		custom_Workflow_TransitionImpl.setTransitionName(getTransitionName());
		custom_Workflow_TransitionImpl.setLogDescription(getLogDescription());
		custom_Workflow_TransitionImpl.setNext_WorkFlowTaskId(getNext_WorkFlowTaskId());
		custom_Workflow_TransitionImpl.setIsEnd(getIsEnd());
		custom_Workflow_TransitionImpl.setComments(getComments());
		custom_Workflow_TransitionImpl.setCreatedDate(getCreatedDate());

		custom_Workflow_TransitionImpl.resetOriginalValues();

		return custom_Workflow_TransitionImpl;
	}

	@Override
	public int compareTo(Custom_Workflow_Transition custom_Workflow_Transition) {
		long primaryKey = custom_Workflow_Transition.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Custom_Workflow_Transition)) {
			return false;
		}

		Custom_Workflow_Transition custom_Workflow_Transition = (Custom_Workflow_Transition)obj;

		long primaryKey = custom_Workflow_Transition.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Custom_Workflow_Transition> toCacheModel() {
		Custom_Workflow_TransitionCacheModel custom_Workflow_TransitionCacheModel =
			new Custom_Workflow_TransitionCacheModel();

		custom_Workflow_TransitionCacheModel.transitionId = getTransitionId();

		custom_Workflow_TransitionCacheModel.workFlowId = getWorkFlowId();

		custom_Workflow_TransitionCacheModel.workFlowTaskId = getWorkFlowTaskId();

		String workFlowTaskId = custom_Workflow_TransitionCacheModel.workFlowTaskId;

		if ((workFlowTaskId != null) && (workFlowTaskId.length() == 0)) {
			custom_Workflow_TransitionCacheModel.workFlowTaskId = null;
		}

		custom_Workflow_TransitionCacheModel.transitionName = getTransitionName();

		String transitionName = custom_Workflow_TransitionCacheModel.transitionName;

		if ((transitionName != null) && (transitionName.length() == 0)) {
			custom_Workflow_TransitionCacheModel.transitionName = null;
		}

		custom_Workflow_TransitionCacheModel.logDescription = getLogDescription();

		String logDescription = custom_Workflow_TransitionCacheModel.logDescription;

		if ((logDescription != null) && (logDescription.length() == 0)) {
			custom_Workflow_TransitionCacheModel.logDescription = null;
		}

		custom_Workflow_TransitionCacheModel.next_WorkFlowTaskId = getNext_WorkFlowTaskId();

		String next_WorkFlowTaskId = custom_Workflow_TransitionCacheModel.next_WorkFlowTaskId;

		if ((next_WorkFlowTaskId != null) &&
				(next_WorkFlowTaskId.length() == 0)) {
			custom_Workflow_TransitionCacheModel.next_WorkFlowTaskId = null;
		}

		custom_Workflow_TransitionCacheModel.isEnd = getIsEnd();

		custom_Workflow_TransitionCacheModel.comments = getComments();

		String comments = custom_Workflow_TransitionCacheModel.comments;

		if ((comments != null) && (comments.length() == 0)) {
			custom_Workflow_TransitionCacheModel.comments = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			custom_Workflow_TransitionCacheModel.createdDate = createdDate.getTime();
		}
		else {
			custom_Workflow_TransitionCacheModel.createdDate = Long.MIN_VALUE;
		}

		return custom_Workflow_TransitionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{transitionId=");
		sb.append(getTransitionId());
		sb.append(", workFlowId=");
		sb.append(getWorkFlowId());
		sb.append(", workFlowTaskId=");
		sb.append(getWorkFlowTaskId());
		sb.append(", transitionName=");
		sb.append(getTransitionName());
		sb.append(", logDescription=");
		sb.append(getLogDescription());
		sb.append(", next_WorkFlowTaskId=");
		sb.append(getNext_WorkFlowTaskId());
		sb.append(", isEnd=");
		sb.append(getIsEnd());
		sb.append(", comments=");
		sb.append(getComments());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.collaborated.entity.model.Custom_Workflow_Transition");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>transitionId</column-name><column-value><![CDATA[");
		sb.append(getTransitionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workFlowId</column-name><column-value><![CDATA[");
		sb.append(getWorkFlowId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workFlowTaskId</column-name><column-value><![CDATA[");
		sb.append(getWorkFlowTaskId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>transitionName</column-name><column-value><![CDATA[");
		sb.append(getTransitionName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>logDescription</column-name><column-value><![CDATA[");
		sb.append(getLogDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>next_WorkFlowTaskId</column-name><column-value><![CDATA[");
		sb.append(getNext_WorkFlowTaskId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isEnd</column-name><column-value><![CDATA[");
		sb.append(getIsEnd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comments</column-name><column-value><![CDATA[");
		sb.append(getComments());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Custom_Workflow_Transition.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Custom_Workflow_Transition.class
		};
	private long _transitionId;
	private long _workFlowId;
	private String _workFlowTaskId;
	private String _transitionName;
	private String _logDescription;
	private String _next_WorkFlowTaskId;
	private long _isEnd;
	private String _comments;
	private Date _createdDate;
	private Custom_Workflow_Transition _escapedModel;
}