/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.collaborated.entity.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.collaborated.entity.model.Custom_Workflow_Task;
import com.collaborated.entity.model.Custom_Workflow_TaskModel;
import com.collaborated.entity.model.Custom_Workflow_TaskSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Custom_Workflow_Task service. Represents a row in the &quot;collaborated_Custom_Workflow_Task&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link Custom_Workflow_TaskModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Custom_Workflow_TaskImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Custom_Workflow_TaskImpl
 * @see Custom_Workflow_Task
 * @see Custom_Workflow_TaskModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class Custom_Workflow_TaskModelImpl extends BaseModelImpl<Custom_Workflow_Task>
	implements Custom_Workflow_TaskModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a custom_ workflow_ task model instance should use the {@link Custom_Workflow_Task} interface instead.
	 */
	public static final String TABLE_NAME = "collaborated_Custom_Workflow_Task";
	public static final Object[][] TABLE_COLUMNS = {
			{ "workFlowTaskId", Types.VARCHAR },
			{ "workFlowId", Types.BIGINT },
			{ "taskName", Types.VARCHAR },
			{ "roleId", Types.BIGINT },
			{ "roleName", Types.VARCHAR },
			{ "comments", Types.VARCHAR },
			{ "createdDate", Types.TIMESTAMP },
			{ "createdBy", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("workFlowTaskId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("workFlowId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("taskName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("roleId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("roleName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("comments", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createdBy", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table collaborated_Custom_Workflow_Task (workFlowTaskId VARCHAR(75) not null primary key,workFlowId LONG,taskName VARCHAR(75) null,roleId LONG,roleName VARCHAR(75) null,comments VARCHAR(75) null,createdDate DATE null,createdBy LONG)";
	public static final String TABLE_SQL_DROP = "drop table collaborated_Custom_Workflow_Task";
	public static final String ORDER_BY_JPQL = " ORDER BY custom_Workflow_Task.workFlowTaskId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY collaborated_Custom_Workflow_Task.workFlowTaskId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.collaborated.entity.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.collaborated.entity.model.Custom_Workflow_Task"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.collaborated.entity.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.collaborated.entity.model.Custom_Workflow_Task"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Custom_Workflow_Task toModel(
		Custom_Workflow_TaskSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Custom_Workflow_Task model = new Custom_Workflow_TaskImpl();

		model.setWorkFlowTaskId(soapModel.getWorkFlowTaskId());
		model.setWorkFlowId(soapModel.getWorkFlowId());
		model.setTaskName(soapModel.getTaskName());
		model.setRoleId(soapModel.getRoleId());
		model.setRoleName(soapModel.getRoleName());
		model.setComments(soapModel.getComments());
		model.setCreatedDate(soapModel.getCreatedDate());
		model.setCreatedBy(soapModel.getCreatedBy());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Custom_Workflow_Task> toModels(
		Custom_Workflow_TaskSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Custom_Workflow_Task> models = new ArrayList<Custom_Workflow_Task>(soapModels.length);

		for (Custom_Workflow_TaskSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.collaborated.entity.service.util.ServiceProps.get(
				"lock.expiration.time.com.collaborated.entity.model.Custom_Workflow_Task"));

	public Custom_Workflow_TaskModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _workFlowTaskId;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setWorkFlowTaskId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _workFlowTaskId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return Custom_Workflow_Task.class;
	}

	@Override
	public String getModelClassName() {
		return Custom_Workflow_Task.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("workFlowTaskId", getWorkFlowTaskId());
		attributes.put("workFlowId", getWorkFlowId());
		attributes.put("taskName", getTaskName());
		attributes.put("roleId", getRoleId());
		attributes.put("roleName", getRoleName());
		attributes.put("comments", getComments());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("createdBy", getCreatedBy());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String workFlowTaskId = (String)attributes.get("workFlowTaskId");

		if (workFlowTaskId != null) {
			setWorkFlowTaskId(workFlowTaskId);
		}

		Long workFlowId = (Long)attributes.get("workFlowId");

		if (workFlowId != null) {
			setWorkFlowId(workFlowId);
		}

		String taskName = (String)attributes.get("taskName");

		if (taskName != null) {
			setTaskName(taskName);
		}

		Long roleId = (Long)attributes.get("roleId");

		if (roleId != null) {
			setRoleId(roleId);
		}

		String roleName = (String)attributes.get("roleName");

		if (roleName != null) {
			setRoleName(roleName);
		}

		String comments = (String)attributes.get("comments");

		if (comments != null) {
			setComments(comments);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}
	}

	@JSON
	@Override
	public String getWorkFlowTaskId() {
		if (_workFlowTaskId == null) {
			return StringPool.BLANK;
		}
		else {
			return _workFlowTaskId;
		}
	}

	@Override
	public void setWorkFlowTaskId(String workFlowTaskId) {
		_workFlowTaskId = workFlowTaskId;
	}

	@JSON
	@Override
	public long getWorkFlowId() {
		return _workFlowId;
	}

	@Override
	public void setWorkFlowId(long workFlowId) {
		_workFlowId = workFlowId;
	}

	@JSON
	@Override
	public String getTaskName() {
		if (_taskName == null) {
			return StringPool.BLANK;
		}
		else {
			return _taskName;
		}
	}

	@Override
	public void setTaskName(String taskName) {
		_taskName = taskName;
	}

	@JSON
	@Override
	public long getRoleId() {
		return _roleId;
	}

	@Override
	public void setRoleId(long roleId) {
		_roleId = roleId;
	}

	@JSON
	@Override
	public String getRoleName() {
		if (_roleName == null) {
			return StringPool.BLANK;
		}
		else {
			return _roleName;
		}
	}

	@Override
	public void setRoleName(String roleName) {
		_roleName = roleName;
	}

	@JSON
	@Override
	public String getComments() {
		if (_comments == null) {
			return StringPool.BLANK;
		}
		else {
			return _comments;
		}
	}

	@Override
	public void setComments(String comments) {
		_comments = comments;
	}

	@JSON
	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@JSON
	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Custom_Workflow_Task toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Custom_Workflow_Task)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		Custom_Workflow_TaskImpl custom_Workflow_TaskImpl = new Custom_Workflow_TaskImpl();

		custom_Workflow_TaskImpl.setWorkFlowTaskId(getWorkFlowTaskId());
		custom_Workflow_TaskImpl.setWorkFlowId(getWorkFlowId());
		custom_Workflow_TaskImpl.setTaskName(getTaskName());
		custom_Workflow_TaskImpl.setRoleId(getRoleId());
		custom_Workflow_TaskImpl.setRoleName(getRoleName());
		custom_Workflow_TaskImpl.setComments(getComments());
		custom_Workflow_TaskImpl.setCreatedDate(getCreatedDate());
		custom_Workflow_TaskImpl.setCreatedBy(getCreatedBy());

		custom_Workflow_TaskImpl.resetOriginalValues();

		return custom_Workflow_TaskImpl;
	}

	@Override
	public int compareTo(Custom_Workflow_Task custom_Workflow_Task) {
		String primaryKey = custom_Workflow_Task.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Custom_Workflow_Task)) {
			return false;
		}

		Custom_Workflow_Task custom_Workflow_Task = (Custom_Workflow_Task)obj;

		String primaryKey = custom_Workflow_Task.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Custom_Workflow_Task> toCacheModel() {
		Custom_Workflow_TaskCacheModel custom_Workflow_TaskCacheModel = new Custom_Workflow_TaskCacheModel();

		custom_Workflow_TaskCacheModel.workFlowTaskId = getWorkFlowTaskId();

		String workFlowTaskId = custom_Workflow_TaskCacheModel.workFlowTaskId;

		if ((workFlowTaskId != null) && (workFlowTaskId.length() == 0)) {
			custom_Workflow_TaskCacheModel.workFlowTaskId = null;
		}

		custom_Workflow_TaskCacheModel.workFlowId = getWorkFlowId();

		custom_Workflow_TaskCacheModel.taskName = getTaskName();

		String taskName = custom_Workflow_TaskCacheModel.taskName;

		if ((taskName != null) && (taskName.length() == 0)) {
			custom_Workflow_TaskCacheModel.taskName = null;
		}

		custom_Workflow_TaskCacheModel.roleId = getRoleId();

		custom_Workflow_TaskCacheModel.roleName = getRoleName();

		String roleName = custom_Workflow_TaskCacheModel.roleName;

		if ((roleName != null) && (roleName.length() == 0)) {
			custom_Workflow_TaskCacheModel.roleName = null;
		}

		custom_Workflow_TaskCacheModel.comments = getComments();

		String comments = custom_Workflow_TaskCacheModel.comments;

		if ((comments != null) && (comments.length() == 0)) {
			custom_Workflow_TaskCacheModel.comments = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			custom_Workflow_TaskCacheModel.createdDate = createdDate.getTime();
		}
		else {
			custom_Workflow_TaskCacheModel.createdDate = Long.MIN_VALUE;
		}

		custom_Workflow_TaskCacheModel.createdBy = getCreatedBy();

		return custom_Workflow_TaskCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{workFlowTaskId=");
		sb.append(getWorkFlowTaskId());
		sb.append(", workFlowId=");
		sb.append(getWorkFlowId());
		sb.append(", taskName=");
		sb.append(getTaskName());
		sb.append(", roleId=");
		sb.append(getRoleId());
		sb.append(", roleName=");
		sb.append(getRoleName());
		sb.append(", comments=");
		sb.append(getComments());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.collaborated.entity.model.Custom_Workflow_Task");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>workFlowTaskId</column-name><column-value><![CDATA[");
		sb.append(getWorkFlowTaskId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workFlowId</column-name><column-value><![CDATA[");
		sb.append(getWorkFlowId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>taskName</column-name><column-value><![CDATA[");
		sb.append(getTaskName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>roleId</column-name><column-value><![CDATA[");
		sb.append(getRoleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>roleName</column-name><column-value><![CDATA[");
		sb.append(getRoleName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comments</column-name><column-value><![CDATA[");
		sb.append(getComments());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Custom_Workflow_Task.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Custom_Workflow_Task.class
		};
	private String _workFlowTaskId;
	private long _workFlowId;
	private String _taskName;
	private long _roleId;
	private String _roleName;
	private String _comments;
	private Date _createdDate;
	private long _createdBy;
	private Custom_Workflow_Task _escapedModel;
}